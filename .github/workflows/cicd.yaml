name: CI/CD
on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-js:
    name: Build JavaScript
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: npm install
      - name: Build
        run: npx esbuild ./web/js/*.js --bundle --outfile=web/assets/bundle.js --minify
      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: javascript bundle
          path: web/assets/bundle.js

  build-css:
    name: Build CSS
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: npm install
      - name: Build
        run: npx tailwindcss -i ./web/css/tailwind.css -o web/assets/style.css --minify
      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: css bundle
          path: web/assets/style.css

  build-go:
    name: Build Go
    needs:
      - build-js
      - build-css
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
      - name: Download CSS
        uses: actions/download-artifact@v4
        with:
          name: css bundle
          path: web/assets/style.css
      - name: Download JavaScript
        uses: actions/download-artifact@v4
        with:
          name: javascript bundle
          path: web/assets/bundle.js
      - name: Build
        run: go build -o ./build/dosetti cmd/dosetti/main.go
      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: application
          path: |
            ./build/dosetti
            ./web/html

  build-docker:
    name: Build Docker image
    # TODO: tests
    # needs:
    #   - unit-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=sha
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
